%main{:role => "main"} 
.row.text-center
  %h4
    .small-4.columns
      .month
        = link_to "", my_calendar_path(offset: offset-4), class: "fa fa-chevron-left", onclick: "moveFooter()"
        %p{class: "text"}
          Previous Month
    .small-4.columns
      #{month}
    .small-4.columns
      .month
        = link_to "", my_calendar_path(offset: offset+4), class: "fa fa-chevron-right", onclick: "moveFooter()"
        %p{class: "text"}
          Next Month

.small-1.columns
  = link_to "Previous Week", my_calendar_path(offset: offset-1), class: 'success button', onclick: "moveFooter()"

.large-10.columns{id: "calendar"}
  .small-block-grid-7
    = cell("my/cell/week_day", collection: week_days)
  .small-block-grid-7
    = cell("my/cell/week", nil, week: 0 + offset, starts_at: options[:starts_at])
  .small-block-grid-7
    = cell("my/cell/week", nil, week: 1 + offset, starts_at: options[:starts_at])
  .small-block-grid-7
    = cell("my/cell/week", nil, week: 2 + offset, starts_at: options[:starts_at])
  .small-block-grid-7
    = cell("my/cell/week", nil, week: 3 + offset, starts_at: options[:starts_at])

.small-1.columns
  = link_to "Next Week", my_calendar_path(offset: offset+1), class: 'success button', onclick: "moveFooter()"

:javascript
  function moveFooter(){
    var calendar = document.getElementById('calendar');
    var page = document.getElementById('page');
    if (calendar.offsetHeight > page.offsetHeight){
      CCSStylesheetRuleStyle("manu", ".page-content", "minHeight", "");
      CCSStylesheetRuleStyle("manu", ".page-content", "minHeight", "100%");
    };
  }

  function CCSStylesheetRuleStyle(stylesheet, selectorText, style, value){
  var CCSstyle = undefined, rules;
  for(var m in document.styleSheets){
    if(document.styleSheets[m].href.indexOf(stylesheet) != -1){
     rules = document.styleSheets[m][document.all ? 'rules' : 'cssRules'];
     for(var n in rules){
       if(rules[n].selectorText == selectorText){
         CCSstyle = rules[n].style;
         break;
       }
     }
     break;
    }
  }
  if(value == undefined)
    return CCSstyle[style]
  else
    return CCSstyle[style] = value
  }